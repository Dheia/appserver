<?xml version="1.0"?>
<!DOCTYPE project>
<project name="appserver-io/appserver" default="composer-init" basedir=".">

    <!-- initialize ENV variable -->
    <property environment="env" />

    <!-- ==================================================================== -->
    <!-- Generate a time stamp for further use in build targets               -->
    <!-- ==================================================================== -->
    <tstamp>
        <format property="time.stamp" pattern="yyyy-MM-dd_HHmmss"/>
    </tstamp>

    <!-- ==================================================================== -->
    <!-- Defines helpful ANT targets                                          -->
    <!-- ==================================================================== -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${basedir}/resources/lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <!-- ==================================================================== -->
    <!-- Defines a XML helper library                                         -->
    <!-- ==================================================================== -->
    <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask">
        <classpath>
            <pathelement location="${basedir}/resources/lib/xmltask.jar"/>
        </classpath>
    </taskdef>

    <!-- initialize file based properties -->
    <property file="${basedir}/build.properties"/>
    <property file="${basedir}/build.default.properties"/>
    <property file="${basedir}/build.${os.family}.properties"/>

    <!-- initialize the library specific properties -->
    <property name="codepool" value="vendor"/>

    <!-- initialize the directory where we can find the real build files -->
    <property name="vendor.dir" value ="${basedir}/${codepool}" />
    <property name="build.dir" value="${vendor.dir}/appserver-io/build" />

    <!-- ==================================================================== -->
    <!-- Import all component specific build configuration files              -->
    <!-- ==================================================================== -->
    <for param="component.build.file">
        <fileset erroronmissingdir="false" dir="${vendor.dir}" includes="**/common.xml" />
        <sequential>
            <import file="@{component.build.file}"/>
        </sequential>
    </for>

    <!-- ==================================================================== -->
    <!-- Checks if composer has installed it's dependencies                   -->
    <!-- ==================================================================== -->
    <target name="is-composer-installed">
        <condition property="composer.present">
            <available file="${build.dir}" type="dir"/>
        </condition>
    </target>

    <!-- ==================================================================== -->
    <!-- Installs all dependencies defined in composer.json                   -->
    <!-- ==================================================================== -->
    <target name="composer-install" depends="is-composer-installed" unless="composer.present" description="Installs all dependencies defined in composer.json">
        <exec dir="${basedir}" executable="composer">
            <arg line="--no-interaction --dev install"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Updates composer dependencies defined in composer.json               -->
    <!-- ==================================================================== -->
    <target name="composer-update" depends="is-composer-installed" if="composer.present" description="Updates composer dependencies defined in composer.json">
        <exec dir="${basedir}" executable="composer">
            <arg line="--no-interaction --dev update"/>
        </exec>
    </target>

    <!-- ===================================================================== -->
    <!-- Checks if the build- and deployment stub has already been initialized -->
    <!-- ===================================================================== -->
    <target name="composer-init">
        <antcall target="composer-install"/>
        <antcall target="composer-update"/>
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the sources to the temporary directory                        -->
    <!-- ==================================================================== -->
    <target name="copy" description="Copies the sources to the temporary directory.">
        <!-- prepare the build environment -->
        <antcall target="prepare" />
        <!-- copy all files to the target directory -->
        <copy todir="${php-target.dir}/appserver" preservelastmodified="true" overwrite="true">
            <fileset dir="${basedir}">
                <include name="etc/**/*" />
                <include name="src/**/*" />
                <include name="var/**/*" />
                <include name="tests/**/*" />
                <include name="webapps/**/*" />
                <include name="internal/**/*" />
                <include name="resources/**/*" />
                <include name="server.php" />
                <include name="appserver.php" />
                <include name="composer.json" />
            </fileset>
        </copy>
        <!-- create the file with the version number -->
        <echo file="${php-target.dir}/appserver/etc/appserver/.release-version" message="dev-master.${build.number}" />
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the sources to the deploy directory                           -->
    <!-- ==================================================================== -->
    <target name="deploy" depends="copy" description="Copies the sources to the deploy directory.">
        <!-- copy all files to the deploy.directory -->
        <copy todir="${deploy.dir}" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-target.dir}/appserver">
                <include name="**/*"/>
            </fileset>
        </copy>
        <!-- execute the composer post install script -->
        <exec dir="${deploy.dir}" executable="${appserver.bin.dir}/php">
            <arg value="${appserver.bin.dir}/composer.phar" />
            <arg value="run-script" />
            <arg value="post-install-cmd" />
        </exec>
    </target>

</project>
